version: "3.9"

services:
  front:
    image: sermalenk/skypro-front:lesson-38
    ports:
      - "80:80"
    depends_on:
      - api
    restart: always

  api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - 8000:8000
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrations:
        condition: service_completed_successfully

#  bot:
#    build:
#      context: .
#    env_file:
#      - .env
#    restart: always
#    depends_on:
#      db:
#        condition: service_healthy
#      migrations:
#        condition: service_completed_successfully
#    command: >
#      sh -c "python3 manage.py runbot"

  bot:
    build:
      context: .
    restart: always
    depends_on:
      migration:
        condition: service_completed_successfully
      db:
          condition: service_healthy
    command: python manage.py runbot
    volumes:
      - ./.docker_env:/app/.env

  migrations:
    build: .
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    command: >
      sh -c "python3 manage.py migrate"

  db:
    image: postgres:latest
    ports:
      - 5432:5432
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres_data:/var/lib/postgresql/data

volumes:
  postgres_data: